<!DOCTYPE html>

<html lang="en">
<head>
  <meta charset="utf-8">
  <!-- Include the CesiumJS JavaScript and CSS files -->
  <script src="https://cesium.com/downloads/cesiumjs/releases/1.83/Build/Cesium/Cesium.js"></script>
  <link href="https://cesium.com/downloads/cesiumjs/releases/1.83/Build/Cesium/Widgets/widgets.css" rel="stylesheet">
</head>
<body>
  <div id="cesiumContainer" class="fullSize"></div>

  <script>
    // Cesium.Ion.defaultAccessToken = config.apiKeyCesium;
    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlM2QzMTZhMS0zODJjLTRjZjktODAxZS1hMzcxZmJkMzcyNGUiLCJpZCI6NjE2OTQsImlhdCI6MTYyNzA2NTA2MH0.h0zaELIQjABu4w3iM-h-8w2mnRd5xT8fcrWk1kxb2Lo';
	
    // Initialize the Cesium Viewer in the HTML element with the `cesiumContainer` ID.
    const viewer = new Cesium.Viewer('cesiumContainer', {
      terrainProvider: Cesium.createWorldTerrain()
    });    


	function createModel(url, height) {
		viewer.entities.removeAll();

		var position = Cesium.Cartesian3.fromDegrees(
			-123.0744619,
			44.0503706,
			height
		);
		var heading = Cesium.Math.toRadians(135);
		var pitch = 0;
		var roll = 0;
		var hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll);
		var orientation = Cesium.Transforms.headingPitchRollQuaternion(
			position,
			hpr
		);

		var entity = viewer.entities.add({
			name: url,
			position: position,
			orientation: orientation,
			model: {
			uri: url,
			minimumPixelSize: 128,
			maximumScale: 20000,
			},
		});
		viewer.trackedEntity = entity;
}

createModel(
		"/3dModels/building/scene.gltf",
        // "../tajjin/odm_texturing/odm_textured_model_geo.obj", // not working !!
        0.0
      );


    // Add Cesium OSM Buildings, a global 3D buildings layer.
    // const buildingTileset = viewer.scene.primitives.add(Cesium.createOsmBuildings());   
    // Fly the camera to San Francisco at the given longitude, latitude, and height.
    // viewer.camera.flyTo({
    //   destination : Cesium.Cartesian3.fromDegrees(-6.915748847769233, 32.883257582807865, 1000),
    //   orientation : {
    //     heading : Cesium.Math.toRadians(0.0),
    //     pitch : Cesium.Math.toRadians(-15.0),
    //   }
    // });
  </script>
 </div>
</body>
</html>
